name: Profile rolling stats

on:
  schedule:
    - cron: "17 5 * * *"   # daily
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/profile-stats.yml"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compute stats and write Shields endpoint JSON
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            fs.mkdirSync('badges', { recursive: true });

            const login = 'Koen-Vannisselroij';
            const WINDOW_DAYS = 30;

            const to = new Date();
            const from = new Date(to.getTime() - WINDOW_DAYS * 24 * 60 * 60 * 1000);

            const q = `
              query($login:String!, $from:DateTime!, $to:DateTime!) {
                user(login: $login) {
                  contributionsCollection(from: $from, to: $to) {
                    totalCommitContributions
                    totalPullRequestContributions
                    totalIssueContributions
                    totalPullRequestReviewContributions
                  }
                }
              }
            `;

            const { user } = await github.graphql(q, {
              login,
              from: from.toISOString(),
              to: to.toISOString()
            });

            const cc = user.contributionsCollection;
            const days = WINDOW_DAYS;

            const commitAvg = (cc.totalCommitContributions / days).toFixed(2);
            const allContribs = cc.totalCommitContributions +
                                cc.totalPullRequestContributions +
                                cc.totalIssueContributions +
                                cc.totalPullRequestReviewContributions;
            const contribAvg = (allContribs / days).toFixed(2);

            // Sum public stars across owned, non-fork repos
            let stars = 0, publicRepos = 0, page = 1;
            while (true) {
              const res = await github.rest.repos.listForUser({
                username: login, per_page: 100, page, type: 'owner', sort: 'updated'
              });
              if (res.data.length === 0) break;
              for (const r of res.data) {
                if (!r.fork) {
                  stars += r.stargazers_count || 0;
                  publicRepos += 1;
                }
              }
              page += 1;
              if (res.data.length < 100) break;
            }

            const mkBadge = (label, message, color='blue', cacheSeconds=21600) => ({
              schemaVersion: 1, label, message, color, cacheSeconds
            });

            fs.writeFileSync('badges/commit-avg-30d.json',
              JSON.stringify(mkBadge('30d commit avg', `${commitAvg}/day`, 'blue')));
            fs.writeFileSync('badges/contrib-avg-30d.json',
              JSON.stringify(mkBadge('30d contributions avg', `${contribAvg}/day`, 'blue')));
            fs.writeFileSync('badges/total-stars.json',
              JSON.stringify(mkBadge('Public stars', String(stars), 'yellow')));
            fs.writeFileSync('badges/public-repos.json',
              JSON.stringify(mkBadge('Public repos', String(publicRepos), 'informational')));
            console.log({ commitAvg, contribAvg, stars, publicRepos });

      - name: Commit and push badge JSON
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add badges/*.json
          git commit -m "chore: update profile badges" || echo "no changes to commit"
          git push

